<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="1" skipped="1" tests="23" time="3.504" timestamp="2025-10-14T00:09:14.584972" hostname="bgc-mbp-m1.local"><testcase classname="tests.p4_t3_cache_perf_test" name="test_cold_to_warm_latency_improves_and_cache_key_exists" time="0.004"><failure message="redis.exceptions.AuthenticationError: Authentication required.">tests/p4_t3_cache_perf_test.py:43: in test_cold_to_warm_latency_improves_and_cache_key_exists
    redis_sync.delete(cache_key)
/opt/homebrew/lib/python3.11/site-packages/redis/commands/core.py:1712: in delete
    return self.execute_command("DEL", *names)
/opt/homebrew/lib/python3.11/site-packages/redis/client.py:533: in execute_command
    conn = self.connection or pool.get_connection(command_name, **options)
/opt/homebrew/lib/python3.11/site-packages/redis/connection.py:1086: in get_connection
    connection.connect()
/opt/homebrew/lib/python3.11/site-packages/redis/connection.py:276: in connect
    self.on_connect()
/opt/homebrew/lib/python3.11/site-packages/redis/connection.py:379: in on_connect
    self.read_response()
/opt/homebrew/lib/python3.11/site-packages/redis/connection.py:500: in read_response
    response = self._parser.read_response(disable_decoding=disable_decoding)
/opt/homebrew/lib/python3.11/site-packages/redis/_parsers/resp2.py:15: in read_response
    result = self._read_response(disable_decoding=disable_decoding)
/opt/homebrew/lib/python3.11/site-packages/redis/_parsers/resp2.py:38: in _read_response
    raise error
E   redis.exceptions.AuthenticationError: Authentication required.</failure></testcase><testcase classname="tests.p4_t3_cache_perf_test" name="test_cache_invalidation_after_graph_update" time="0.003"><skipped type="pytest.xfail" message="Cache invalidation via versioning not yet implemented" /></testcase><testcase classname="tests.p4_t3_test.TestL1Cache" name="test_l1_basic_get_put" time="0.000" /><testcase classname="tests.p4_t3_test.TestL1Cache" name="test_l1_miss_returns_none" time="0.000" /><testcase classname="tests.p4_t3_test.TestL1Cache" name="test_l1_ttl_expiration" time="1.106" /><testcase classname="tests.p4_t3_test.TestL1Cache" name="test_l1_lru_eviction" time="0.001" /><testcase classname="tests.p4_t3_test.TestL1Cache" name="test_l1_invalidate_prefix" time="0.001" /><testcase classname="tests.p4_t3_test.TestL1Cache" name="test_l1_clear" time="0.001" /><testcase classname="tests.p4_t3_test.TestL2Cache" name="test_l2_basic_get_put" time="0.015" /><testcase classname="tests.p4_t3_test.TestL2Cache" name="test_l2_miss_returns_none" time="0.003" /><testcase classname="tests.p4_t3_test.TestL2Cache" name="test_l2_ttl_expiration" time="1.107" /><testcase classname="tests.p4_t3_test.TestL2Cache" name="test_l2_invalidate_prefix" time="0.008" /><testcase classname="tests.p4_t3_test.TestTieredCache" name="test_tiered_cache_l1_hit" time="0.020" /><testcase classname="tests.p4_t3_test.TestTieredCache" name="test_tiered_cache_l2_promotion" time="0.013" /><testcase classname="tests.p4_t3_test.TestTieredCache" name="test_tiered_cache_miss" time="0.019" /><testcase classname="tests.p4_t3_test.TestTieredCache" name="test_tiered_cache_cached_function" time="0.010" /><testcase classname="tests.p4_t3_test.TestTieredCache" name="test_cache_key_includes_versions" time="0.009" /><testcase classname="tests.p4_t3_test.TestTieredCache" name="test_cache_invalidation_on_version_rotation" time="0.010" /><testcase classname="tests.p4_t3_test.TestTieredCache" name="test_explicit_version_invalidation" time="0.010" /><testcase classname="tests.p4_t3_test.TestQueryWarmer" name="test_warmer_basic_warming" time="0.011" /><testcase classname="tests.p4_t3_test.TestQueryWarmer" name="test_warmer_skips_already_cached" time="0.010" /><testcase classname="tests.p4_t3_test.TestQueryWarmer" name="test_warmer_handles_failures" time="0.010" /><testcase classname="tests.p4_t3_test.TestCachePerformance" name="test_steady_state_hit_rate_exceeds_80_percent" time="0.089" /></testsuite></testsuites>
